- name: Install python3-pymysql
  ansible.builtin.apt:
    name: python3-pymysql

- name: Install mysql-server
  ansible.builtin.apt:
    name: mysql-server




- name: Start service mysql, if not started
  ansible.builtin.service:
    name: mysql
    state: started

- name: Enable service mysql, and not touch the state
  ansible.builtin.service:
    name: mysql
    enabled: yes

- name: mysql config
  ansible.builtin.template:
    src: override.cnf.j2
    dest: /etc/mysql/mysql.conf.d/override.cnf
  notify:
    - Restart mysql

- name: MySQL database
  community.mysql.mysql_db:
    name: "{{ mysql_database }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
  notify:
    - Reset MySQL source
    - Reset MySQL replica

- name: MySQL user
  community.mysql.mysql_user:
    name: "{{ mysql_user }}"
    password: "{{ mysql_password }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
    host: "%"
    priv: "{{ mysql_database }}.*:ALL"
    
- name: MySQL user replication
  community.mysql.mysql_user:
    name: "replication"
    password: "{{ mysql_password }}"
    login_unix_socket: /var/run/mysqld/mysqld.sock
    priv: "*.*:SUPER,PROCESS,REPLICATION SLAVE,SELECT"
    host: "%"
  
- name: MySQL read only for replica server
  community.mysql.mysql_variables:
    variable: read_only
    value: "{{ 'OFF' if inventory_hostname == mysql_host else 'ON' }}"
    mode: persist
    login_unix_socket: /var/run/mysqld/mysqld.sock
  notify:
    - Reset MySQL source
    - Reset MySQL replica
